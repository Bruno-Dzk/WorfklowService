name: Build Docker Image and Push it To ECR and Deploy to ECS
on:
  push:
    branches:
      - main
     
jobs:
  build_and_push_to_ECR:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Check current work directory
      run: |
        echo Checking current work directory. It is important since docker must be run from project root directory && \
        pwd

    - name: Build docker
      run: |
        docker build . --platform linux/amd64 -t ${{secrets.AWS_ACCOUNT_NUMBER}}.dkr.ecr.eu-central-1.amazonaws.com/devops15/workflow-service

    - name: AWS Configure Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: eu-central-1
        role-to-assume: arn:aws:iam::{{secrets.AWS_ACCOUNT_NUMBER}}:role/PushDockerImageECR
        role-session-name: PushDockerImageECR

    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1
      with:
        mask-password: true
        skip-logout: false
        
    - name: Push Docker Image
      run : |
        docker push {{secrets.AWS_ACCOUNT_NUMBER}}.dkr.ecr.eu-central-1.amazonaws.com/devops15/workflow-service:latest

  deploy_to_ECS:
    needs: build_and_push_to_ECR
    runs-on: ubuntu-latest
    permissions:
      id-token: write

    steps:
    - name: AWS Configure Credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-region: eu-central-1
        role-to-assume: arn:aws:iam::{{secrets.AWS_ACCOUNT_NUMBER}}:role/UpdateECSTask
        role-session-name: UpdateECSTask

    - name: Stop running tasks
      run: |
        TASKS=$(aws ecs list-tasks --cluster BigTuna --family workflow-service --query "taskArns[]" --output text)
        for TASK in $TASKS; do
          aws ecs stop-task --cluster BigTuna --task $TASK --reason "Stopping all tasks for cleanup"
        done

    - name: Update ECS
      run: |
        aws ecs update-service --cluster BigTuna --service workflow-service --force-new-deployment
